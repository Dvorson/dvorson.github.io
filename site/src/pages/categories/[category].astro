---
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const postModules = import.meta.glob('../../posts/*.md', { eager: true });
  const posts = Object.values(postModules) as any[];
  
  // Collect all categories from all posts (handling both single category and multiple categories)
  const allCategories = new Set<string>();
  
  posts.forEach((post) => {
    const frontmatter = post.frontmatter;
    if (frontmatter) {
      // Handle single category field
      if (frontmatter.category && typeof frontmatter.category === 'string') {
        allCategories.add(frontmatter.category);
      }
      // Handle categories array
      if (frontmatter.categories && Array.isArray(frontmatter.categories)) {
        frontmatter.categories.forEach((cat: string) => allCategories.add(cat));
      }
    }
  });
  
  return Array.from(allCategories).sort().map((category) => ({ 
    params: { category } 
  }));
}

const { category } = Astro.params;

const postModules = import.meta.glob('../../posts/*.md', { eager: true });
const posts = Object.entries(postModules).map(([path, post]) => {
  const slug = path.split('/').pop()?.replace('.md', '') || '';
  return {
    ...post,
    url: `/${slug}`,
    frontmatter: post.frontmatter
  };
});

const filtered = posts
  .filter((p) => {
    const frontmatter = p.frontmatter;
    if (!frontmatter) return false;
    
    // Check if category matches either single category field or is in categories array
    const matchesSingleCategory = frontmatter.category === category;
    const matchesCategoriesArray = frontmatter.categories && 
      Array.isArray(frontmatter.categories) && 
      frontmatter.categories.includes(category);
    
    return matchesSingleCategory || matchesCategoriesArray;
  })
  .sort((a, b) => new Date(b.frontmatter.date || b.frontmatter.pubDate).getTime() - new Date(a.frontmatter.date || a.frontmatter.pubDate).getTime());
---

<Layout>
  <section class="my-8">
    <h1 class="text-3xl font-bold mb-4">Posts in "{category}"</h1>
    {filtered.length > 0 ? (
      <ul class="space-y-4">
        {filtered.map((post) => (
          <li>
            <a href={post.url} class="text-blue-600 hover:underline">
              {post.frontmatter.title}
            </a>
            <p class="text-gray-500 text-sm">
              {new Date(post.frontmatter.date || post.frontmatter.pubDate).toLocaleDateString()}
            </p>
          </li>
        ))}
      </ul>
    ) : (
      <p class="text-gray-600">No posts found in this category.</p>
    )}
  </section>
</Layout>
