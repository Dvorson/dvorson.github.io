---
import Layout from '../layouts/Layout.astro';
import cv from '../data/cv.json';
const postModules = import.meta.glob('../posts/*.md', { eager: true });
const posts = Object.entries(postModules)
  .map(([path, post]) => {
    const slug = path.split('/').pop()?.replace('.md', '') || '';
    return {
      ...post.frontmatter,
      url: `/${slug}`,
      date: post.frontmatter.date,
      title: post.frontmatter.title
    };
  })
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 3);
---

<Layout>
  <!-- Hero Section -->
  <section class="relative overflow-hidden bg-gradient-to-br from-slate-50 via-white to-blue-50 rounded-2xl p-8 sm:p-12 mb-16 border border-gray-100">
    <div class="absolute -top-24 -right-24 w-64 h-64 bg-gradient-to-br from-blue-100/40 to-indigo-100/40 rounded-full blur-3xl"></div>
    <div class="absolute -bottom-16 -left-16 w-48 h-48 bg-gradient-to-br from-gray-100/30 to-slate-100/30 rounded-full blur-3xl"></div>
    
    <div class="relative max-w-4xl">
      <h1 class="text-5xl sm:text-6xl font-bold text-gray-900 mb-4 tracking-tight">{cv.name}</h1>
      <p class="text-2xl font-medium text-blue-600 mb-6">{cv.role}</p>
      <p class="text-lg text-gray-700 max-w-3xl leading-relaxed mb-8">{cv.summary}</p>
      
      <div class="flex flex-col sm:flex-row gap-4">
        <button id="download-cv" class="inline-flex items-center px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 transition-all duration-200 shadow-sm hover:shadow-md">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          Download CV
        </button>
        <a href="#blog" class="inline-flex items-center px-6 py-3 bg-white text-gray-700 font-semibold rounded-lg hover:bg-gray-50 transition-all duration-200 shadow-sm hover:shadow-md border border-gray-200">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
          </svg>
          Read Blog
        </a>
      </div>
    </div>
  </section>

  <!-- Expertise Areas -->
  <section class="mb-16">
    <h2 class="text-3xl font-bold mb-8 text-gray-900">Expertise Areas</h2>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {cv.expertise.map((area: string) => (
        <div class="bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100 group">
          <div class="flex items-center mb-3">
            <div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center group-hover:bg-blue-200 transition-colors">
              <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
              </svg>
            </div>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">{area}</h3>
          <p class="text-gray-600 text-sm">
            {area === 'Software Architecture & Design' && 'Designing scalable, maintainable systems with modern architectural patterns and best practices.'}
            {area === 'Full-Stack Web Development' && 'End-to-end development using Node.js, React, TypeScript, and modern web technologies.'}
            {area === 'Cloud Infrastructure & DevOps' && 'AWS, Azure deployment with CI/CD pipelines, Docker, Kubernetes orchestration.'}
            {area === 'Team Leadership & Mentoring' && 'Leading cross-functional teams and mentoring developers in technical excellence.'}
            {area === 'Performance Optimization' && 'Database tuning, monitoring with Prometheus/Grafana, and application performance.'}
            {area === 'Smart Home & Electronics' && 'IoT development, microcontroller programming, and embedded systems integration.'}
          </p>
        </div>
      ))}
    </div>
  </section>

  <!-- Core Technologies -->
  <section class="mb-16">
    <h2 class="text-3xl font-bold mb-8 text-gray-900">Core Technologies</h2>
    <div class="bg-white rounded-xl p-8 shadow-sm border border-gray-100">
      <div class="flex flex-wrap gap-3">
        {cv.skills.map((skill: string) => (
          <span class="px-4 py-2 rounded-full bg-gray-50 hover:bg-blue-50 transition-all duration-200 text-gray-800 font-medium border border-gray-200 hover:border-blue-200 cursor-default">
            {skill}
          </span>
        ))}
      </div>
    </div>
  </section>

  <!-- Recent Experience -->
  <section class="mb-16">
    <h2 class="text-3xl font-bold mb-8 text-gray-900">Recent Experience</h2>
    <div class="space-y-8">
      {cv.experience.slice(0, 3).map((exp: any) => (
        <div class="bg-white rounded-xl p-8 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100">
          <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between mb-4">
            <div class="flex-1">
              <h3 class="text-xl font-bold text-gray-900 mb-1">{exp.company}</h3>
              <p class="text-lg text-blue-600 font-semibold mb-2">{exp.title}</p>
              {exp.project && (
                <p class="text-gray-600 mb-3"><span class="font-medium">Project:</span> {exp.project}</p>
              )}
            </div>
            <div class="lg:text-right lg:ml-6">
              <div class="inline-block px-3 py-1 bg-gray-100 rounded-full text-sm font-medium text-gray-700 mb-2">
                {exp.duration}
              </div>
              <p class="text-sm text-gray-500">{exp.start} – {exp.end}</p>
            </div>
          </div>
          
          <p class="text-gray-700 leading-relaxed mb-4">{exp.description}</p>
          
          {exp.responsibilities && (
            <div class="mb-4">
              <h4 class="font-semibold text-gray-900 mb-2">Key Responsibilities:</h4>
              <ul class="space-y-1">
                {exp.responsibilities.slice(0, 3).map((resp: string) => (
                  <li class="text-gray-600 text-sm flex items-start">
                    <span class="w-1.5 h-1.5 bg-blue-600 rounded-full mt-2 mr-3 flex-shrink-0"></span>
                    {resp}
                  </li>
                ))}
              </ul>
            </div>
          )}
          
          {exp.technologies && (
            <div class="pt-4 border-t border-gray-100">
              <p class="text-sm text-gray-500 mb-2 font-medium">Technologies:</p>
              <p class="text-sm text-gray-600">{exp.technologies}</p>
            </div>
          )}
        </div>
      ))}
    </div>
    
    <div class="text-center mt-8">
      <a href="#" class="inline-flex items-center text-blue-600 hover:text-blue-700 font-semibold">
        View Complete Experience
        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </section>

  <!-- Blog Section -->
  <section id="blog" class="mb-16">
    <div class="flex items-center justify-between mb-8">
      <h2 class="text-3xl font-bold text-gray-900">Latest Posts</h2>
      <a href="/categories" class="text-blue-600 hover:text-blue-700 font-semibold text-sm">View All →</a>
    </div>
    
    {posts.length > 0 ? (
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {posts.map((post: any) => (
          <a href={post.url} class="group">
            <article class="bg-white rounded-xl p-6 shadow-sm hover:shadow-md transition-all duration-200 border border-gray-100 group-hover:border-blue-200 h-full">
              <h3 class="text-lg font-semibold text-gray-900 group-hover:text-blue-600 transition-colors mb-2 line-clamp-2">
                {post.title}
              </h3>
              {post.description && (
                <p class="text-gray-600 text-sm mb-4 line-clamp-3">{post.description}</p>
              )}
              <div class="flex items-center justify-between mt-auto pt-4 border-t border-gray-100">
                <time class="text-xs text-gray-500 font-medium">
                  {new Date(post.date).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric'
                  })}
                </time>
                <span class="text-blue-600 text-sm font-medium group-hover:translate-x-1 transition-transform">
                  Read more →
                </span>
              </div>
            </article>
          </a>
        ))}
      </div>
    ) : (
      <div class="bg-white rounded-xl p-12 shadow-sm border border-gray-100 text-center">
        <svg class="w-12 h-12 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
        </svg>
        <h3 class="text-lg font-semibold text-gray-900 mb-2">No posts yet</h3>
        <p class="text-gray-600">Check back soon for technical insights and project updates!</p>
      </div>
    )}
  </section>
</Layout>

<script is:inline define:vars={{ cv }}>
  document.getElementById('download-cv')?.addEventListener('click', () => {
    // Create a new window with CV content for PDF printing
    const printWindow = window.open('', '_blank');
    
    if (!printWindow) {
      alert('Please allow popups for this site to download the CV');
      return;
    }
    
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <title>${cv.name} - CV</title>
        <style>
          @media print {
            body { margin: 0; padding: 20px; }
            @page { margin: 1in; size: A4; }
          }
          body { 
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
            line-height: 1.5; 
            color: #333; 
            max-width: 800px; 
            margin: 0 auto; 
            padding: 20px;
            font-size: 14px;
          }
          h1 { color: #2563eb; border-bottom: 2px solid #2563eb; padding-bottom: 8px; margin-bottom: 16px; font-size: 24px; }
          h2 { color: #1f2937; margin-top: 24px; margin-bottom: 12px; font-size: 18px; }
          h3 { color: #374151; margin-bottom: 4px; font-size: 16px; }
          .header { text-align: center; margin-bottom: 32px; }
          .role { font-size: 16px; color: #6b7280; margin-bottom: 12px; }
          .summary { background: #f8fafc; padding: 16px; border-radius: 6px; margin-bottom: 24px; }
          .expertise { display: grid; grid-template-columns: repeat(2, 1fr); gap: 8px; margin-bottom: 16px; }
          .expertise-item { background: #eff6ff; padding: 8px; border-radius: 4px; font-weight: 500; font-size: 13px; }
          .skills { display: flex; flex-wrap: wrap; gap: 6px; margin-bottom: 16px; }
          .skill { background: #f1f5f9; padding: 4px 10px; border-radius: 16px; font-size: 12px; }
          .experience-item { margin-bottom: 20px; padding-bottom: 16px; border-bottom: 1px solid #e5e7eb; }
          .company { font-weight: bold; color: #1f2937; }
          .title { color: #2563eb; font-weight: 600; }
          .duration { color: #6b7280; font-size: 13px; }
          .description { margin: 8px 0; }
          .responsibilities { margin: 8px 0; }
          .responsibilities li { margin-bottom: 4px; }
          .technologies { background: #f8fafc; padding: 8px; border-radius: 4px; font-size: 12px; margin-top: 8px; }
        </style>
      </head>
      <body>
        <div class="header">
          <h1>${cv.name}</h1>
          <div class="role">${cv.role}</div>
        </div>
        
        <div class="summary">
          <h2>Professional Summary</h2>
          <p>${cv.summary}</p>
        </div>
        
        <h2>Expertise Areas</h2>
        <div class="expertise">
          ${cv.expertise.map(area => `<div class="expertise-item">${area}</div>`).join('')}
        </div>
        
        <h2>Core Technologies</h2>
        <div class="skills">
          ${cv.skills.map(skill => `<span class="skill">${skill}</span>`).join('')}
        </div>
        
        <h2>Professional Experience</h2>
        ${cv.experience.map(exp => `
          <div class="experience-item">
            <h3>
              <span class="company">${exp.company}</span> • 
              <span class="title">${exp.title}</span>
            </h3>
            <div class="duration">${exp.start} – ${exp.end} (${exp.duration})</div>
            ${exp.project ? `<div><strong>Project:</strong> ${exp.project}</div>` : ''}
            <div class="description">${exp.description}</div>
            ${exp.responsibilities ? `
              <div class="responsibilities">
                <strong>Key Responsibilities:</strong>
                <ul>
                  ${exp.responsibilities.map(resp => `<li>${resp}</li>`).join('')}
                </ul>
              </div>
            ` : ''}
            ${exp.technologies ? `<div class="technologies"><strong>Technologies:</strong> ${exp.technologies}</div>` : ''}
          </div>
        `).join('')}
        
        <script>
          window.onload = function() {
            window.print();
            window.onafterprint = function() {
              window.close();
            };
          };
        </script>
      </body>
      </html>
    `;
    
    printWindow.document.write(htmlContent);
    printWindow.document.close();
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>